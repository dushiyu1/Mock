version: '3.8'

services:
  mysql:
    image: mysql:8.0
    platform: linux/amd64
    container_name: mock-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mock_server
      MYSQL_USER: mockuser
      MYSQL_PASSWORD: mockpassword
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped

  mock-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock-server
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=mockuser
      - MYSQL_PASSWORD=mockpassword
      - MYSQL_DATABASE=mock_server
      - API_KEY=mock-server-admin
      - FLASK_ENV=production
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: mock-nginx
    ports:
      - "15001:80"    # 宿主机的15001端口映射到Nginx的80端口
    volumes:
      - ./frontend:/usr/share/nginx/html    # 挂载前端文件
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # 挂载Nginx配置
    depends_on:
      - mock-server
    restart: unless-stopped

volumes:
  mysql_data: